---
import SimpleCard from '@/components/cards/simple-card.astro';
import BackButton from '@/components/interactive/back-button.svelte';
import EventButton from '@/components/interactive/event-button.svelte';
import TicketButton from '@/components/interactive/ticket-button.svelte';
import Common from '@/layouts/common.astro';
import { getGig } from '@/lib/content/get-gig';
import type { LV } from '@/lib/types/kv.type';
import { defaultLocale, getTranslations } from '@/lib/utils/i18n';
import { getLink } from '@/lib/utils/navigation';
import PortableTextImage from '../portable-text-image.astro';
import PortableText from '../portable-text.astro';

const {
  props: { locale = defaultLocale, slug },
} = Astro;

const gig = await getGig({ slug: slug });
const t = await getTranslations(locale, 'gigs');
const backLink = await getLink({
  locale,
  tag: 'gigs',
});

const gigMeta: LV[] = [
  { label: t.date, value: gig?.date },
  { label: t.city, value: `${gig?.city}, ${gig?.country}` },
  { label: t.venue, value: gig?.venue },
  { label: t.otherArtists, value: gig?.otherBands?.join(', ') },
].filter((meta) => !!meta.value);
---

<Common title={gig?.city}>
  <BackButton client:load href={backLink}>{t.back}</BackButton>
  <h1>{gig?.city}</h1>
  <h3>{gig?.date}</h3>
  {(!!gig?.ticketsUrl || !!gig?.facebookEventUrl) &&
    <div class='flex max-md:flex-col gap-6 mb-8'>
      {gig?.ticketsUrl && <TicketButton client:visible label={t.tickets} href={gig.ticketsUrl} date={gig?.date} />}
      {gig?.facebookEventUrl && <EventButton client:visible label={t.event} href={gig.facebookEventUrl} />}
    </div>
  }
  {gig?.image &&
    <PortableTextImage node={gig?.image} imgClass="object-cover w-full rounded-xl mb-8 max-h-[300px] md:max-h-[400px] opacity-40 hover:opacity-70 duration-300 ease-in-out" />
  }
  <div class="max-md:-mx-4">
    <SimpleCard classname='w-full mb-8'>
      <div class="grid max-md:gap-4">
        {gigMeta.map((meta) => (
          <div class="group grid sm:grid-cols-2 md:grid-cols-3 gap-0 select-none">
            <div>{meta.label}</div>
            <div class="text-foreground/50 duration-300 group-hover:text-foreground ease-in-out md:col-span-2">{meta.value}</div>
          </div>
        ))}
      </div>
    </SimpleCard>
  </div>

  {gig?.about &&
    <PortableText portableText={gig?.about}/>
  }
</Common>