---
import Common from '@/layouts/common.astro';
import { getArticles } from '@/lib/content';
import { getLastAnnouncement } from '@/lib/content/get-announcements';
import { getLastPastGigs, getNextGigs } from '@/lib/content/get-gigs';
import { getGlobals } from '@/lib/content/get-globals';
import { defaultLocale, getTranslations } from '@/lib/utils/i18n';
import { getLink } from '@/lib/utils/navigation';
import { format } from 'date-fns';
import HomeGroup from '../home-group.astro';
import PortableTextImage from '../portable-text-image.astro';

const {
  props: { locale = defaultLocale },
} = Astro;

const t = await getTranslations(locale, 'home');

const globals = await getGlobals();
const articles = await getArticles(3);
const pastGigs = await getLastPastGigs(3);
const nextGigs = await getNextGigs(3);

const announcement = await getLastAnnouncement();
const announcementLink = await getLink({
  locale,
  tag: 'announcement',
  slug: announcement?.slug.current,
});

const showLists =
  nextGigs.length > 0 || articles.length > 0 || pastGigs.length > 0;

const contactLink = await getLink({ locale, tag: 'contact' });
---

<Common>
  <div class="space-y-16">
  <!-- Hero -->
    <div class="relative -mx-12 h-[80vh] md:h-[700px] lg:h-[800px] xl:h-[900px]">
      <!-- image should fade to background color on top and bottom -->
      {globals?.siteImage && <PortableTextImage node={globals?.siteImage} imgClass="object-cover w-full h-full opacity-30 md:rounded-xl" />}
      <div class="absolute inset-0 bg-background/10 bg-opacity-10 flex items-center justify-center">
        <div class="text-center text-white">
          <h1>{globals?.siteTitle}</h1>
          <h3>{globals?.siteDescription}</h3>
        </div>
      </div>
    </div>
    <!-- Announcements -->
    {announcement && <div class="relative -mx-12 h-72 sm:h-80 group">
      <a href={announcementLink}>
        {announcement?.cover && <PortableTextImage node={announcement?.cover} imgClass="object-cover w-full h-full opacity-30 md:rounded-xl group-hover:opacity-40 transition duration-300 ease-in-out" />}
        <div class="absolute inset-0 bg-background/10 bg-opacity-10 flex items-center justify-center">
          <div class="text-center text-white">
            <h2>{announcement?.title}</h2>
            <h3>{announcement?.previewText}</h3>
          </div>
        </div>
      </a>
    </div>}
    <!-- Articles and gigs -->
    {showLists &&
      <div class="grid md:grid-cols-2 gap-8 -mx-4 md:-mx-12">
        {nextGigs && nextGigs.length > 0 && (
          <div class="md:col-span-2">
            <HomeGroup
              locale={locale}
              label={t.upcomingGigs}
              elements={nextGigs.map((gig) => ({
                title: gig?.city,
                description: format(gig.date, 'dd.MM.yyyy'),
                slug: gig?.slug
              }))}
              tag="gigs"
            />
          </div>
        )}
        {articles && articles.length > 0 &&
          <HomeGroup
            locale={locale}
            label={t.articles}
            elements={articles.map((article) => ({
              title: article?.title,
              description: article?.publishedAt && format(article?.publishedAt, 'dd.MM.yyyy'),
              slug: article?.slug
            }))}
            tag="blog"
          />
        }
        {pastGigs && pastGigs.length > 0 &&
          <HomeGroup
            locale={locale}
            label={t.gigs}
            elements={pastGigs.map((gig) => ({
              title: gig?.city,
              description: format(gig.date, 'dd.MM.yyyy'),
              slug: gig?.slug
            }))}
            tag="gigs"
          />
        }
    </div>}
    {t.contact &&
      <div>
        <p>{t.contact}<a href={contactLink} class="text-foreground underline">{t.here}</a>{t.forInfo}.</p>
      </div>
    }
  </div>
</Common>
