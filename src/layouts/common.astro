---
import { ViewTransitions } from 'astro:transitions';
import Footer from '@/components/footer.astro';
import Meta from '@/components/meta.astro';

// Importing Raleway font weights
import '@fontsource/raleway/100.css';
import '@fontsource/raleway/200.css';
import '@fontsource/raleway/300.css';
import '@fontsource/raleway/400.css';
import '@fontsource/raleway/500.css';
import '@fontsource/raleway/600.css';
import '@fontsource/raleway/700.css';
import '@fontsource/raleway/800.css';
import '@fontsource/raleway/900.css';
import '@fontsource/bebas-neue';
import Noise from '@/components/interactive/noise.svelte';
import NavigationBar from '@/components/navigation/navigation-bar.astro';

const { title } = Astro.props;
---

<!doctype html>
<html lang="en" transition:animate="fade" class="scroll-smooth">
  <head>
    <Meta pageTitle={title} />
    <ViewTransitions />
    <script>
      // Language detection and redirection
      import { getLanguageCookie, languageCookieName } from "@/config/language";
      import { defaultLocale, isLocale } from "@/lib/utils/i18n";
      import { getLocalizedPath, getSegments } from "@/lib/utils/navigation";

      (async function() {
        // will run once the page is loaded
        if (!document.cookie.includes(languageCookieName)) {
          // Protection for language codes that are not 2 characters long
          const languages = navigator.languages?.filter((lang) => lang.length === 2);

          // Fallback to English if no matching language is found
          const userLang = languages[0] || defaultLocale;

          // Setting the cookie
          document.cookie = getLanguageCookie(userLang);
        }
        // changing location based on cookie
        const languageCookieValue = document.cookie
          .split('; ')
          .find((row) => row.startsWith(languageCookieName))?.split('=')[1] || defaultLocale;

        const language = isLocale(languageCookieValue) ? languageCookieValue : defaultLocale;

        const currentPath = window.location.pathname;
        const { segments, currentLocale } = getSegments(currentPath);

        // get localized path (current one)
        let localePath = await getLocalizedPath({
          currentLocale,
          currentPath,
          segments,
          targetLocale: language,
        });

        // there might be a trailing slash in the URL - unify it (if currentPath has one, add it to localePath)
        if (currentPath.endsWith('/') && !localePath.endsWith('/')) {
          localePath += '/';
        }

        // also, if localePath has a trailing slash, but currentPath doesn't, remove it
        if (localePath.endsWith('/') && !currentPath.endsWith('/')) {
          localePath = localePath.slice(0, -1);
        }

        // redirect user to the correct language (if needed)
        if (localePath !== currentPath) {
          window.location.href = localePath;
        }
      }())
    </script>
	</head>
  <body>
    <Noise client:load />
    <div class="relative mx-auto max-w-7xl">
      <div class="px-12">
        <NavigationBar />
        <main>
          <slot />
        </main>
        <Footer />
      </div>
    </div>
  </body>
</html>

<style is:global>
  body {
    font-family: 'Raleway', sans-serif;
    @apply bg-background/95 text-foreground;
  }

  main {
    @apply py-0 min-h-[calc(100vh-25rem)];
  }

  footer {
    @apply py-12;
  }

  h1 {
    @apply text-6xl font-bold mb-4 text-foreground/90;
    font-family: 'Bebas Neue', sans-serif;
  }

  h2 {
    @apply text-3xl font-medium my-4;
  }

  h3 {
    @apply text-2xl font-medium;
  }

  p {
    @apply text-lg font-normal;
  }

  .nav-title {
    @apply text-4xl text-foreground-darken;
    font-family: 'Bebas Neue', sans-serif;
  }
</style>